{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\skylab-bootcamp-201901\\\\staff\\\\clara-rufi\\\\st-james-vet\\\\st-james-vet-app\\\\src\\\\components\\\\Visit_Owner\\\\index.jsx\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport logic from '../../logic';\nimport moment from 'moment';\nimport './index.sass';\n\nvar VisitOwner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VisitOwner, _Component);\n\n  function VisitOwner() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VisitOwner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VisitOwner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: '',\n      appointmentsOwner: [],\n      year: moment().format('YYYY'),\n      month: moment().format('MM'),\n      error: false,\n      deleteVisit: false\n    };\n    _this.retrieveAppointmentsOwner =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var appointmentsOwner;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              debugger;\n              _context.next = 3;\n              return logic.retrieveAppointmentsOwner();\n\n            case 3:\n              appointmentsOwner = _context.sent;\n\n              _this.setState({\n                appointmentsOwner: appointmentsOwner\n              }); // console.log(this.state.appointmentsOwner.length)\n              // console.log(this.state.appointmentsOwner)\n\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.retrieveUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return logic.retrieveUser();\n\n            case 2:\n              user = _context2.sent;\n\n              _this.setState({\n                user: user.id\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.handleGoHome = function (event) {\n      event.preventDefault();\n\n      _this.props.history.push('/home');\n    };\n\n    _this.handleDeleteVisit = function (event) {\n      event.preventDefault();\n      var Id = event.target.value;\n\n      _this.deleteVisit(Id);\n    };\n\n    _this.deleteVisit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(Id) {\n        var message;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return logic.deleteAppointment(Id);\n\n              case 3:\n                _this.setState({\n                  deleteVisit: true,\n                  visitConfirmed: false\n                });\n\n                _this.retrieveAppointmentsOwner();\n\n                _context3.next = 11;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                message = _context3.t0.message;\n\n                _this.setState({\n                  error: message,\n                  visitConfirmed: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleGoHome = function (event) {\n      event.preventDefault();\n\n      _this.props.history.push('/home');\n    };\n\n    _this.visitOwnerDetails = function (id, owner, pet, date) {\n      var dateVisit = date;\n      var today = new Date();\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"appointment\",\n        value: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Date:\", ' ', dateVisit.getUTCMonth() + 1, '-', dateVisit.getUTCDate(), '-', dateVisit.getUTCFullYear(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"Hour:\", ' ', dateVisit.getUTCHours() + 2, ':', dateVisit.getMinutes(), 'h', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Pet:\", ' ', pet.name, owner.name, React.createElement(\"button\", {\n        onClick: _this.handleDeleteVisit,\n        value: id,\n        className: \"button__delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Delete\"))));\n    };\n\n    _this.visitOwner = function (id, owner, pet, date) {\n      var dateVisit = date;\n      var today = new Date();\n      debugger;\n      if (dateVisit.getUTCFullYear() > today.getUTCFullYear()) // return visitOwnerDetails(id, owner, pet, date)\n        // return(   \n        return _this.visitOwnerDetails(id, owner, pet, date) // <p className=\"appointment\" value={id}>\n        //     <th>\n        //         Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n        //         <br />\n        //         Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n        //         <br />\n        //         Pet:{' '}{pet.name}{owner.name}\n        //         <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \n        //         </th>\n        //     </p>\n        // )\n        ;\n\n      if (dateVisit.getUTCFullYear() === today.getUTCFullYear() && dateVisit.getUTCMonth() + 1 > today.getUTCMonth() + 1) {\n        return _this.visitOwnerDetails(id, owner, pet, date) //         <tr>\n        //         <p className=\"appointment\" value={id}>\n        //             <th>\n        //                 Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n        //                 <br />\n        //                 Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n        //                 <br />\n        //                 Pet:{' '}{pet.name}{owner.name}\n        //                 <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \n        //                 </th>\n        //             </p>\n        //         </tr>\n        ;\n      }\n\n      if (dateVisit.getUTCMonth() + 1 == today.getUTCMonth() + 1 && today.getUTCDate() + 2 < dateVisit.getUTCDate()) {\n        return _this.visitOwnerDetails(id, owner, pet, date) //         <tr>\n        //         <p className=\"appointment\" value={id}>\n        //             <th>\n        //                 Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n        //                 <br />\n        //                 Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n        //                 <br />\n        //                 Pet:{' '}{pet.name}{owner.name}\n        //                 <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \n        //                 </th>\n        //             </p>\n        //         </tr>\n        ;\n      } // return(   \n      //     <tr>\n      //     <p className=\"appointment\" value={id}>\n      //         <th>\n      //             Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n      //             <br />\n      //             Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n      //             <br />\n      //             Pet:{' '}{pet.name}{owner.name}\n      //             </th>\n      //         </p>\n      //     </tr>\n      // )\n\n    };\n\n    return _this;\n  }\n\n  _createClass(VisitOwner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveAppointmentsOwner();\n      this.retrieveUser();\n    }\n  }, {\n    key: \"render\",\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      var appointmentsOwner = this.state.appointmentsOwner,\n          visitOwner = this.visitOwner;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Appointments:\"), appointmentsOwner.map(function (_ref5) {\n        var id = _ref5.id,\n            owner = _ref5.owner,\n            pet = _ref5.pet,\n            date = _ref5.date;\n        // console.log(11111, this.state.appointmentsOwner)\n        appointmentsOwner.sort(function (a, b) {\n          return a.date - b.date;\n        }); // console.log(2222, this.state.appointmentsOwner)\n        // let dateVisit = new Date(date)\n        //   let dateVisit = date\n        // var today = new Date()\n        // var day = today.getDate()+2\n\n        if (owner._id === _this2.state.user) {\n          // return this.visitOwner(id, owner, pet, date)\n          return visitOwner(id, owner, pet, date); // <tr>\n          //     <p className=\"appointment\" value={id}>\n          //         <th>\n          //             Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n          //             <br />\n          //             Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n          //             <br />\n          //             Pet:{' '}{pet.name}{owner.name}\n\n          /* {console.log(dateVisit.getUTCDate(), today.getDate()+2)} */\n\n          /* {dateVisit.getUTCDate() < today.getDate()+2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */\n          //             {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */} \n          //         </th>\n          //     </p>\n          // </tr>\n          //     <tr>\n          //     <p className=\"appointment\" value={id}>\n          //         {/* <th className=\"calendarOwner\"> */}\n          //         <th>\n          //             {/* Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n          //             <br />\n          //             Hour:{' '}{dateVisit.getUTCHours() + 1}{':'}{dateVisit.getMinutes()}{'h'}\n          //             <br />\n          //             Pet:{' '}{pet.name}{owner.name} */}\n          //             {/* {dateVisit+2 >= today  ?  <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}   \n          //             {/* {dateVisit.getUTCMonth() >= today.getUTCMonth() ?  <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */}\n          //             {/* {dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */} */}\n          //             {/* dateVisit.getUTCMonth() >= today.getUTCMonth() && dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */}\n          //             {console.log(dateVisit.getUTCDate() - 2, today.getDate())}\n          //             {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */} \n          //         </th>\n          //     </p>\n          // </tr>\n          //    {dateVisit.getUTCMonth() >= today.getUTCMonth() && dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}   \n        } // return visitOwner(id, owner, pet, date)\n\n      }), this.state.deleteVisit && React.createElement(\"p\", {\n        className: \"feedback feedback__success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Appointment succesfully deleted\"), React.createElement(\"div\", {\n        className: \"no__appointments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"If you want an appointment or modify it, you can call at 01792 205000\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Or send us an email: stjamesvet@stjamesvet.com\"))), React.createElement(\"button\", {\n        className: \"button__gohome\",\n        onClick: this.handleGoHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Go Home\"));\n    }\n  }]);\n\n  return VisitOwner;\n}(Component);\n\nexport default withRouter(VisitOwner); // if (owner._id === this.state.user) {\n//     if(dateVisit.getUTCDate() < today.getDate()){\n// return (\n//         <tr>\n//             <p className=\"appointment\" value={id}>\n//                 <th>\n//                     Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\n//                     <br />\n//                     Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\n//                     <br />\n//                     Pet:{' '}{pet.name}{owner.name}\n//                     {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */}\n//                 </th>\n//             </p>\n//         </tr>\n//         )\n//         // }\n//         // count=+1\n//         // console.log(count)\n//     }\n//     // this.getDelete()\n// })\n// }\n// {this.state.deleteVisit && <p className=\"feedback feedback__success\">Appointment succesfully deleted</p>}\n// {this.state.noAppointments && <div className=\"no__appointments\">\n// {/* <div className=\"noAppointments\"> */}\n// {/* <p>You don't have any appointment</p> */}\n// <p>If you want an appointment or modify it, you can call at 01792 205000</p>\n// <p>Or send us an email: stjamesvet@stjamesvet.com</p>\n// </div>\n// // </div>\n// }\n// </div>\n// <button className=\"button__gohome\" onClick={this.handleGoHome}>Go Home</button>\n// </form>\n// }\n// }","map":{"version":3,"sources":["C:\\Users\\lluna\\bootcamp\\collab\\skylab-bootcamp-201901\\staff\\clara-rufi\\st-james-vet\\st-james-vet-app\\src\\components\\Visit_Owner\\index.jsx"],"names":["React","Component","withRouter","logic","moment","VisitOwner","state","user","appointmentsOwner","year","format","month","error","deleteVisit","retrieveAppointmentsOwner","setState","retrieveUser","id","handleGoHome","event","preventDefault","props","history","push","handleDeleteVisit","Id","target","value","deleteAppointment","visitConfirmed","message","visitOwnerDetails","owner","pet","date","dateVisit","today","Date","getUTCMonth","getUTCDate","getUTCFullYear","getUTCHours","getMinutes","name","visitOwner","map","sort","a","b","_id"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport logic from '../../logic';\r\nimport moment from 'moment';\r\nimport './index.sass'\r\n\r\nclass VisitOwner extends Component {\r\n\r\n    state = { user: '', appointmentsOwner: [], year: moment().format('YYYY'), month: moment().format('MM'), error: false, deleteVisit: false}\r\n\r\n\r\n    componentDidMount() {\r\n        this.retrieveAppointmentsOwner()\r\n        this.retrieveUser()\r\n    }\r\n\r\n    retrieveAppointmentsOwner = async () => {\r\n        debugger\r\n        const appointmentsOwner = await logic.retrieveAppointmentsOwner()\r\n        this.setState({ appointmentsOwner })\r\n        // console.log(this.state.appointmentsOwner.length)\r\n        // console.log(this.state.appointmentsOwner)\r\n    }\r\n\r\n    retrieveUser = async () => {\r\n        const user = await logic.retrieveUser()\r\n        this.setState({ user: user.id })\r\n    }\r\n\r\n    handleGoHome = event => {\r\n        event.preventDefault()\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n    handleDeleteVisit = event => {\r\n        event.preventDefault()\r\n        const Id = event.target.value;\r\n        this.deleteVisit(Id)\r\n    }\r\n\r\n    deleteVisit = async (Id) => {\r\n        try {\r\n            await logic.deleteAppointment(Id)\r\n            this.setState({ deleteVisit: true, visitConfirmed: false })\r\n            this.retrieveAppointmentsOwner()\r\n        } catch ({ message }) {\r\n            this.setState({ error: message, visitConfirmed: false })\r\n        }\r\n    }\r\n\r\n    handleGoHome = event => {\r\n        event.preventDefault()\r\n        this.props.history.push('/home')\r\n    }\r\n\r\n\r\n    visitOwnerDetails=(id, owner,pet,date) => {\r\n        let dateVisit = date\r\n        var today = new Date()\r\n        return(\r\n        <tr>\r\n        <p className=\"appointment\" value={id}>\r\n            <th>\r\n                Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n                <br />\r\n                Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n                <br />\r\n                Pet:{' '}{pet.name}{owner.name}\r\n                <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \r\n                </th>\r\n            </p>\r\n        </tr>\r\n        )\r\n    }\r\n    \r\n\r\n    visitOwner=(id, owner, pet, date) => {\r\n        let dateVisit = date\r\n        var today = new Date()\r\n        debugger\r\n        if ( dateVisit.getUTCFullYear() > today.getUTCFullYear()) \r\n            // return visitOwnerDetails(id, owner, pet, date)\r\n        // return(   \r\n            return (\r\n            this.visitOwnerDetails(id, owner, pet, date)\r\n            // <p className=\"appointment\" value={id}>\r\n            //     <th>\r\n            //         Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n            //         <br />\r\n            //         Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n            //         <br />\r\n            //         Pet:{' '}{pet.name}{owner.name}\r\n            //         <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \r\n            //         </th>\r\n            //     </p>\r\n          \r\n        // )\r\n            )\r\n\r\n\r\n        if(  \r\n            dateVisit.getUTCFullYear() === today.getUTCFullYear()\r\n            &&\r\n            dateVisit.getUTCMonth() + 1 > today.getUTCMonth() + 1\r\n            ){\r\n            \r\n            return(  \r\n      this.visitOwnerDetails(id, owner, pet, date) \r\n        //         <tr>\r\n        //         <p className=\"appointment\" value={id}>\r\n        //             <th>\r\n        //                 Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n        //                 <br />\r\n        //                 Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n        //                 <br />\r\n        //                 Pet:{' '}{pet.name}{owner.name}\r\n        //                 <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \r\n        //                 </th>\r\n        //             </p>\r\n        //         </tr>\r\n            )\r\n        \r\n        } \r\n\r\n\r\n        if (dateVisit.getUTCMonth() + 1 == today.getUTCMonth() + 1 && (today.getUTCDate() + 2 < dateVisit.getUTCDate())) {\r\n            return(   \r\n               this.visitOwnerDetails(id, owner, pet, date)\r\n        //         <tr>\r\n        //         <p className=\"appointment\" value={id}>\r\n        //             <th>\r\n        //                 Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n        //                 <br />\r\n        //                 Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n        //                 <br />\r\n        //                 Pet:{' '}{pet.name}{owner.name}\r\n        //                 <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> \r\n        //                 </th>\r\n        //             </p>\r\n        //         </tr>\r\n            )\r\n        }\r\n\r\n        // return(   \r\n        //     <tr>\r\n        //     <p className=\"appointment\" value={id}>\r\n        //         <th>\r\n        //             Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n        //             <br />\r\n        //             Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n        //             <br />\r\n        //             Pet:{' '}{pet.name}{owner.name}\r\n        //             </th>\r\n        //         </p>\r\n        //     </tr>\r\n        // )\r\n    }\r\n    // }\r\nrender() {\r\n    \r\n    const { state: { appointmentsOwner }, visitOwner } = this\r\n    \r\n    return <form>\r\n            <div className=\"input__form\">\r\n                <h1>Appointments:</h1>\r\n                {\r\n                    appointmentsOwner.map(({ id, owner, pet, date }) => {\r\n                        \r\n                        // console.log(11111, this.state.appointmentsOwner)\r\n                        appointmentsOwner.sort(function (a, b) {\r\n                            return a.date - b.date\r\n                        })\r\n                        // console.log(2222, this.state.appointmentsOwner)\r\n                    // let dateVisit = new Date(date)\r\n                    //   let dateVisit = date\r\n                        // var today = new Date()\r\n                        // var day = today.getDate()+2\r\n\r\n                        if (owner._id === this.state.user) {\r\n                            // return this.visitOwner(id, owner, pet, date)\r\n                        return visitOwner(id, owner, pet, date)\r\n                           \r\n                                // <tr>\r\n                                //     <p className=\"appointment\" value={id}>\r\n                                //         <th>\r\n                                //             Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n                                //             <br />\r\n                                //             Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n                                //             <br />\r\n                                //             Pet:{' '}{pet.name}{owner.name}\r\n                                            /* {console.log(dateVisit.getUTCDate(), today.getDate()+2)} */\r\n                                            /* {dateVisit.getUTCDate() < today.getDate()+2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */\r\n                                //             {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */} \r\n                                //         </th>\r\n                                //     </p>\r\n                                // </tr>\r\n\r\n//     <tr>\r\n//     <p className=\"appointment\" value={id}>\r\n//         {/* <th className=\"calendarOwner\"> */}\r\n//         <th>\r\n//             {/* Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n//             <br />\r\n//             Hour:{' '}{dateVisit.getUTCHours() + 1}{':'}{dateVisit.getMinutes()}{'h'}\r\n//             <br />\r\n//             Pet:{' '}{pet.name}{owner.name} */}\r\n//             {/* {dateVisit+2 >= today  ?  <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}   \r\n//             {/* {dateVisit.getUTCMonth() >= today.getUTCMonth() ?  <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */}\r\n//             {/* {dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */} */}\r\n\r\n//             {/* dateVisit.getUTCMonth() >= today.getUTCMonth() && dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}    */}\r\n//             {console.log(dateVisit.getUTCDate() - 2, today.getDate())}\r\n//             {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */} \r\n//         </th>\r\n//     </p>\r\n// </tr>\r\n\r\n//    {dateVisit.getUTCMonth() >= today.getUTCMonth() && dateVisit.getUTCDate() - today.getUTCDate() >= 2 ?   <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button>:''}   \r\n\r\n\r\n                        \r\n                        }\r\n// return visitOwner(id, owner, pet, date)\r\n\r\n})\r\n                    }\r\n                {this.state.deleteVisit && <p className=\"feedback feedback__success\">Appointment succesfully deleted</p>}\r\n                {<div className=\"no__appointments\">\r\n                    <p>If you want an appointment or modify it, you can call at 01792 205000</p>\r\n                    <p>Or send us an email: stjamesvet@stjamesvet.com</p>\r\n                </div>\r\n                  \r\n                }\r\n            </div>\r\n            <button className=\"button__gohome\" onClick={this.handleGoHome}>Go Home</button>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withRouter(VisitOwner)\r\n\r\n// if (owner._id === this.state.user) {\r\n//     if(dateVisit.getUTCDate() < today.getDate()){\r\n\r\n// return (\r\n    \r\n//         <tr>\r\n//             <p className=\"appointment\" value={id}>\r\n//                 <th>\r\n//                     Date:{' '}{dateVisit.getUTCMonth() + 1}{'-'}{dateVisit.getUTCDate()}{'-'}{dateVisit.getUTCFullYear()}\r\n//                     <br />\r\n//                     Hour:{' '}{dateVisit.getUTCHours() + 2}{':'}{dateVisit.getMinutes()}{'h'}\r\n//                     <br />\r\n//                     Pet:{' '}{pet.name}{owner.name}\r\n                  \r\n//                     {/* <button onClick={this.handleDeleteVisit} value={id} className=\"button__delete\">Delete</button> */}\r\n//                 </th>\r\n//             </p>\r\n//         </tr>\r\n        \r\n//         )\r\n         \r\n     \r\n        \r\n//         // }\r\n//         // count=+1\r\n//         // console.log(count)\r\n    \r\n//     }\r\n//     // this.getDelete()\r\n    \r\n// })\r\n// }\r\n// {this.state.deleteVisit && <p className=\"feedback feedback__success\">Appointment succesfully deleted</p>}\r\n// {this.state.noAppointments && <div className=\"no__appointments\">\r\n// {/* <div className=\"noAppointments\"> */}\r\n// {/* <p>You don't have any appointment</p> */}\r\n\r\n\r\n// <p>If you want an appointment or modify it, you can call at 01792 205000</p>\r\n// <p>Or send us an email: stjamesvet@stjamesvet.com</p>\r\n\r\n// </div>\r\n// // </div>\r\n// }\r\n// </div>\r\n// <button className=\"button__gohome\" onClick={this.handleGoHome}>Go Home</button>\r\n// </form>\r\n// }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}